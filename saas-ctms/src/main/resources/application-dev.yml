server:
  port: 8099
  tomcat:
    uri-encoding: UTF-8
    max-threads: 1000
    min-spare-threads: 30
    connection-timeout: 5000ms
  servlet:
    context-path: /
  ssl:
    enabled: false

spring:
  application:
    name: saas
  datasource:
    driverClassName: com.mysql.jdbc.Driver
    url: jdbc:mysql://127.0.0.1:3316/det?useUnicode=true&characterEncoding=utf-8
    username: det
    password: det!@#QWE
    druid:
      # 连接池的配置信息
      # 初始化大小，最小，最大
      initial-size: 5
      min-idle: 5
      maxActive: 20
      # 配置获取连接等待超时的时间
      maxWait: 60000
      # 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒
      timeBetweenEvictionRunsMillis: 60000
      # 配置一个连接在池中最小生存的时间，单位是毫秒
      minEvictableIdleTimeMillis: 300000
      validationQuery: SELECT 1
      testWhileIdle: true
      testOnBorrow: false
      testOnReturn: false
      # 打开PSCache，并且指定每个连接上PSCache的大小
      poolPreparedStatements: true
      maxPoolPreparedStatementPerConnectionSize: 20
      # 配置监控统计拦截的filters，去掉后监控界面sql无法统计，'wall'用于防火墙
      filters: stat,wall,slf4j
      # 通过connectProperties属性来打开mergeSql功能；慢SQL记录
      connectionProperties: druid.stat.mergeSql\=true;druid.stat.slowSqlMillis\=5000
      # 配置DruidStatFilter
      web-stat-filter:
        enabled: true
        url-pattern: "/*"
        exclusions: "*.js,*.gif,*.jpg,*.bmp,*.png,*.css,*.ico,/druid/*"
      # 配置DruidStatViewServlet
      stat-view-servlet:
        url-pattern: "/druid/*"
        # IP白名单(没有配置或者为空，则允许所有访问)
        allow:
        # IP黑名单 (存在共同时，deny优先于allow)
        #        deny:
        #  禁用HTML页面上的“Reset All”功能
        reset-enable: false
        # 登录名
        login-username: admin
        # 登录密码
        login-password: 123456
  jpa:
    hibernate:
      ddl-auto: update
    database-platform: org.hibernate.dialect.MySQL5InnoDBDialect
    show-sql: true
  activemq:
    broker-url:  failover:(tcp://127.0.0.1:61616,tcp://127.0.0.1:61617,tcp://127.0.0.1:61618)
    #结束等待时长
    close-timeout: 10s
    # 默认代理URL是否应该在内存中。如果指定了显式代理，则忽略此值。
    in-memory: true
    # 是否在回滚回滚消息之前停止消息传递。这意味着当启用此命令时，消息顺序不会被保留
    non-blocking-redelivery: false
    # 等待消息发送响应的时间。设置为0等待永远
    send-timeout: 0
    user: admin
    password: admin
    packages:
      # 是否信任所有包
      trust-all: true
      # 要信任的特定包的逗号分隔列表（当不信任所有包时）
      trusted:
    pool:
      # 当连接请求和池满时是否阻塞。设置false会抛“JMSException异常”。
      block-if-full: true
      # 如果池仍然满，则在抛出异常前阻塞时间。
      block-if-full-timeout: -1ms
      # 是否在启动时创建连接。可以在启动时用于加热池
      #create-connection-on-startup: true
      # 是否用Pooledconnectionfactory代替普通的ConnectionFactory。
      enabled: false
      # 连接过期超时。
      #expiry-timeout: 0ms
      # 连接空闲超时
      idle-timeout: 30ms
      # 连接池最大连接数
      max-connections: 1
      # 每个连接的有效会话的最大数目。
      maximum-active-session-per-connection: 500
      #当有"JMSException"时尝试重新连接
      #reconnect-on-exception: true
      # 在空闲连接清除线程之间运行的时间。当为负数时，没有空闲连接驱逐线程运行。
      time-between-expiration-check: -1ms
      # 是否只使用一个MessageProducer
      use-anonymous-producers: true
  jms:
    #默认情况下activemq提供的是queue模式，若要使用topic模式需要配置下面配置
    pub-sub-domain: true
  redis:
    cluster:
      nodes:
        - 127.0.0.1:7100
        - 127.0.0.1:7101
        - 127.0.0.1:7200
        - 127.0.0.1:7201
        - 127.0.0.1:7300
        - 127.0.0.1:7301
    lettuce:
      pool:
        max-active: 8
        max-idle: 10
        max-wait: 1ms
      shutdown-timeout: 200ms
  cache:
    redis:
      #超時時間
      time-to-live: 300000
      cache-null-values: true
    cache-names: c1
#eureka:
#  instance:
#    prefer-ip-address: true
#    instance-id: ${spring.cloud.client.ipAddress}:${spring.application.name}:${server.port}
#  client:
#    register-with-eureka: false
#    fetch-registry: false
#    serviceUrl:
#      defaultZone: http://10.17.5.45:9911/eureka/,http://10.17.5.46:9912/eureka/
debug: true
